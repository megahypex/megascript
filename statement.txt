Statement -> VarDeclaration |
             GlobalDeclaration |
             FunctionDeclaration |
             ClassDeclaration |
             AssignmentStatement 

VarDeclaration -> 'var' identifier ('=' expression)? (';')?
GlobalDeclaration -> 'global' identifier ('=' expression)? (';')?
FunctionDeclaration -> 'func' identifier '(' (identifier (',' identifier)*)? ':'
                        Statement*
                       'end'

ClassDeclaration -> 'class' identifier ':'
                    (VarDeclaration |
                     FunctionDeclaration)*
                    'end'

AssignmentDeclaration -> call ('=' expression (';')?) |
                              ('+=' expression (';')?) |
                              ('-=' expression (';')?) |
                              ('*=' expression (';')?) |
                              ('/=' expression (';')?) |
                              ('^=' expression (';')?) |
                              ('%=' expression (';')?) |
                              standaloneExpressionStatement                                     

standaloneExpressionStatement -> expression (';')?                          // Check if expression evaluated is a standalone expression // 




